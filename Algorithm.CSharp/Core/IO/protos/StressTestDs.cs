// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StressTestDs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace QuantConnect.Algorithm.CSharp.Core.IO {

  /// <summary>Holder for reflection information generated from StressTestDs.proto</summary>
  public static partial class StressTestDsReflection {

    #region Descriptor
    /// <summary>File descriptor for StressTestDs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StressTestDsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJTdHJlc3NUZXN0RHMucHJvdG8SJVF1YW50Q29ubmVjdC5BbGdvcml0aG0u",
            "Q1NoYXJwLkNvcmUuSU8aDENvbW1vbi5wcm90byLVAQoTUmVxdWVzdFN0cmVz",
            "c1Rlc3REcxIKCgJ0cxgBIAEoCRISCgp1bmRlcmx5aW5nGAIgASgJEkAKCGhv",
            "bGRpbmdzGAMgAygLMi4uUXVhbnRDb25uZWN0LkFsZ29yaXRobS5DU2hhcnAu",
            "Q29yZS5JTy5Ib2xkaW5nElwKEW1hcmtldF9kYXRhX3NuYXBzGAQgAygLMkEu",
            "UXVhbnRDb25uZWN0LkFsZ29yaXRobS5DU2hhcnAuQ29yZS5JTy5NYXJrZXRE",
            "YXRhU25hcEJ5VW5kZXJseWluZyKKBgoSUmVzdWx0U3RyZXNzVGVzdERzEgoK",
            "AnRzGAEgASgJEhIKCnVuZGVybHlpbmcYAiABKAkSQAoIaG9sZGluZ3MYAyAD",
            "KAsyLi5RdWFudENvbm5lY3QuQWxnb3JpdGhtLkNTaGFycC5Db3JlLklPLkhv",
            "bGRpbmcSVgoHZHNfZG5sdhgEIAMoCzJFLlF1YW50Q29ubmVjdC5BbGdvcml0",
            "aG0uQ1NoYXJwLkNvcmUuSU8uUmVzdWx0U3RyZXNzVGVzdERzLkRzRG5sdkVu",
            "dHJ5EhMKC2RlbHRhX3RvdGFsGAUgASgBEh0KFWRlbHRhX3RvdGFsX2Fjcm9z",
            "c19kcxgGIAEoARIVCg13ZWlnaHRlZF9kbmx2GAcgASgBEocBCiFtYXJnaW5h",
            "bF93ZWlnaHRlZF9kbmx2X2J5X2hvbGRpbmcYCCADKAsyXC5RdWFudENvbm5l",
            "Y3QuQWxnb3JpdGhtLkNTaGFycC5Db3JlLklPLlJlc3VsdFN0cmVzc1Rlc3RE",
            "cy5NYXJnaW5hbFdlaWdodGVkRG5sdkJ5SG9sZGluZ0VudHJ5EhcKD3RvdGFs",
            "X29iamVjdGl2ZRgJIAEoARKNAQokbWFyZ2luYWxfc2NhbGVkX29iamVjdGl2",
            "ZV9ieV9ob2xkaW5nGAogAygLMl8uUXVhbnRDb25uZWN0LkFsZ29yaXRobS5D",
            "U2hhcnAuQ29yZS5JTy5SZXN1bHRTdHJlc3NUZXN0RHMuTWFyZ2luYWxTY2Fs",
            "ZWRPYmplY3RpdmVCeUhvbGRpbmdFbnRyeRotCgtEc0RubHZFbnRyeRILCgNr",
            "ZXkYASABKAkSDQoFdmFsdWUYAiABKAE6AjgBGkQKIk1hcmdpbmFsV2VpZ2h0",
            "ZWREbmx2QnlIb2xkaW5nRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgBOgI4ARpHCiVNYXJnaW5hbFNjYWxlZE9iamVjdGl2ZUJ5SG9sZGluZ0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAToCOAFCKKoCJVF1YW50",
            "Q29ubmVjdC5BbGdvcml0aG0uQ1NoYXJwLkNvcmUuSU9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::QuantConnect.Algorithm.CSharp.Core.IO.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::QuantConnect.Algorithm.CSharp.Core.IO.RequestStressTestDs), global::QuantConnect.Algorithm.CSharp.Core.IO.RequestStressTestDs.Parser, new[]{ "Ts", "Underlying", "Holdings", "MarketDataSnaps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QuantConnect.Algorithm.CSharp.Core.IO.ResultStressTestDs), global::QuantConnect.Algorithm.CSharp.Core.IO.ResultStressTestDs.Parser, new[]{ "Ts", "Underlying", "Holdings", "DsDnlv", "DeltaTotal", "DeltaTotalAcrossDs", "WeightedDnlv", "MarginalWeightedDnlvByHolding", "TotalObjective", "MarginalScaledObjectiveByHolding" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RequestStressTestDs : pb::IMessage<RequestStressTestDs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestStressTestDs> _parser = new pb::MessageParser<RequestStressTestDs>(() => new RequestStressTestDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestStressTestDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QuantConnect.Algorithm.CSharp.Core.IO.StressTestDsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestStressTestDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestStressTestDs(RequestStressTestDs other) : this() {
      ts_ = other.ts_;
      underlying_ = other.underlying_;
      holdings_ = other.holdings_.Clone();
      marketDataSnaps_ = other.marketDataSnaps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestStressTestDs Clone() {
      return new RequestStressTestDs(this);
    }

    /// <summary>Field number for the "ts" field.</summary>
    public const int TsFieldNumber = 1;
    private string ts_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ts {
      get { return ts_; }
      set {
        ts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 2;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "holdings" field.</summary>
    public const int HoldingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding> _repeated_holdings_codec
        = pb::FieldCodec.ForMessage(26, global::QuantConnect.Algorithm.CSharp.Core.IO.Holding.Parser);
    private readonly pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding> holdings_ = new pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding> Holdings {
      get { return holdings_; }
    }

    /// <summary>Field number for the "market_data_snaps" field.</summary>
    public const int MarketDataSnapsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::QuantConnect.Algorithm.CSharp.Core.IO.MarketDataSnapByUnderlying> _repeated_marketDataSnaps_codec
        = pb::FieldCodec.ForMessage(34, global::QuantConnect.Algorithm.CSharp.Core.IO.MarketDataSnapByUnderlying.Parser);
    private readonly pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.MarketDataSnapByUnderlying> marketDataSnaps_ = new pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.MarketDataSnapByUnderlying>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.MarketDataSnapByUnderlying> MarketDataSnaps {
      get { return marketDataSnaps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestStressTestDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestStressTestDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ts != other.Ts) return false;
      if (Underlying != other.Underlying) return false;
      if(!holdings_.Equals(other.holdings_)) return false;
      if(!marketDataSnaps_.Equals(other.marketDataSnaps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ts.Length != 0) hash ^= Ts.GetHashCode();
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      hash ^= holdings_.GetHashCode();
      hash ^= marketDataSnaps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ts.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ts);
      }
      if (Underlying.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Underlying);
      }
      holdings_.WriteTo(output, _repeated_holdings_codec);
      marketDataSnaps_.WriteTo(output, _repeated_marketDataSnaps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ts.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ts);
      }
      if (Underlying.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Underlying);
      }
      holdings_.WriteTo(ref output, _repeated_holdings_codec);
      marketDataSnaps_.WriteTo(ref output, _repeated_marketDataSnaps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ts.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ts);
      }
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      size += holdings_.CalculateSize(_repeated_holdings_codec);
      size += marketDataSnaps_.CalculateSize(_repeated_marketDataSnaps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestStressTestDs other) {
      if (other == null) {
        return;
      }
      if (other.Ts.Length != 0) {
        Ts = other.Ts;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      holdings_.Add(other.holdings_);
      marketDataSnaps_.Add(other.marketDataSnaps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ts = input.ReadString();
            break;
          }
          case 18: {
            Underlying = input.ReadString();
            break;
          }
          case 26: {
            holdings_.AddEntriesFrom(input, _repeated_holdings_codec);
            break;
          }
          case 34: {
            marketDataSnaps_.AddEntriesFrom(input, _repeated_marketDataSnaps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ts = input.ReadString();
            break;
          }
          case 18: {
            Underlying = input.ReadString();
            break;
          }
          case 26: {
            holdings_.AddEntriesFrom(ref input, _repeated_holdings_codec);
            break;
          }
          case 34: {
            marketDataSnaps_.AddEntriesFrom(ref input, _repeated_marketDataSnaps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ResultStressTestDs : pb::IMessage<ResultStressTestDs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResultStressTestDs> _parser = new pb::MessageParser<ResultStressTestDs>(() => new ResultStressTestDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResultStressTestDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QuantConnect.Algorithm.CSharp.Core.IO.StressTestDsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultStressTestDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultStressTestDs(ResultStressTestDs other) : this() {
      ts_ = other.ts_;
      underlying_ = other.underlying_;
      holdings_ = other.holdings_.Clone();
      dsDnlv_ = other.dsDnlv_.Clone();
      deltaTotal_ = other.deltaTotal_;
      deltaTotalAcrossDs_ = other.deltaTotalAcrossDs_;
      weightedDnlv_ = other.weightedDnlv_;
      marginalWeightedDnlvByHolding_ = other.marginalWeightedDnlvByHolding_.Clone();
      totalObjective_ = other.totalObjective_;
      marginalScaledObjectiveByHolding_ = other.marginalScaledObjectiveByHolding_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultStressTestDs Clone() {
      return new ResultStressTestDs(this);
    }

    /// <summary>Field number for the "ts" field.</summary>
    public const int TsFieldNumber = 1;
    private string ts_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ts {
      get { return ts_; }
      set {
        ts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 2;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "holdings" field.</summary>
    public const int HoldingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding> _repeated_holdings_codec
        = pb::FieldCodec.ForMessage(26, global::QuantConnect.Algorithm.CSharp.Core.IO.Holding.Parser);
    private readonly pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding> holdings_ = new pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::QuantConnect.Algorithm.CSharp.Core.IO.Holding> Holdings {
      get { return holdings_; }
    }

    /// <summary>Field number for the "ds_dnlv" field.</summary>
    public const int DsDnlvFieldNumber = 4;
    private static readonly pbc::MapField<string, double>.Codec _map_dsDnlv_codec
        = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForDouble(17, 0D), 34);
    private readonly pbc::MapField<string, double> dsDnlv_ = new pbc::MapField<string, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, double> DsDnlv {
      get { return dsDnlv_; }
    }

    /// <summary>Field number for the "delta_total" field.</summary>
    public const int DeltaTotalFieldNumber = 5;
    private double deltaTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DeltaTotal {
      get { return deltaTotal_; }
      set {
        deltaTotal_ = value;
      }
    }

    /// <summary>Field number for the "delta_total_across_ds" field.</summary>
    public const int DeltaTotalAcrossDsFieldNumber = 6;
    private double deltaTotalAcrossDs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DeltaTotalAcrossDs {
      get { return deltaTotalAcrossDs_; }
      set {
        deltaTotalAcrossDs_ = value;
      }
    }

    /// <summary>Field number for the "weighted_dnlv" field.</summary>
    public const int WeightedDnlvFieldNumber = 7;
    private double weightedDnlv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double WeightedDnlv {
      get { return weightedDnlv_; }
      set {
        weightedDnlv_ = value;
      }
    }

    /// <summary>Field number for the "marginal_weighted_dnlv_by_holding" field.</summary>
    public const int MarginalWeightedDnlvByHoldingFieldNumber = 8;
    private static readonly pbc::MapField<string, double>.Codec _map_marginalWeightedDnlvByHolding_codec
        = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForDouble(17, 0D), 66);
    private readonly pbc::MapField<string, double> marginalWeightedDnlvByHolding_ = new pbc::MapField<string, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, double> MarginalWeightedDnlvByHolding {
      get { return marginalWeightedDnlvByHolding_; }
    }

    /// <summary>Field number for the "total_objective" field.</summary>
    public const int TotalObjectiveFieldNumber = 9;
    private double totalObjective_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalObjective {
      get { return totalObjective_; }
      set {
        totalObjective_ = value;
      }
    }

    /// <summary>Field number for the "marginal_scaled_objective_by_holding" field.</summary>
    public const int MarginalScaledObjectiveByHoldingFieldNumber = 10;
    private static readonly pbc::MapField<string, double>.Codec _map_marginalScaledObjectiveByHolding_codec
        = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForDouble(17, 0D), 82);
    private readonly pbc::MapField<string, double> marginalScaledObjectiveByHolding_ = new pbc::MapField<string, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, double> MarginalScaledObjectiveByHolding {
      get { return marginalScaledObjectiveByHolding_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResultStressTestDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResultStressTestDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ts != other.Ts) return false;
      if (Underlying != other.Underlying) return false;
      if(!holdings_.Equals(other.holdings_)) return false;
      if (!DsDnlv.Equals(other.DsDnlv)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DeltaTotal, other.DeltaTotal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DeltaTotalAcrossDs, other.DeltaTotalAcrossDs)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WeightedDnlv, other.WeightedDnlv)) return false;
      if (!MarginalWeightedDnlvByHolding.Equals(other.MarginalWeightedDnlvByHolding)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalObjective, other.TotalObjective)) return false;
      if (!MarginalScaledObjectiveByHolding.Equals(other.MarginalScaledObjectiveByHolding)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ts.Length != 0) hash ^= Ts.GetHashCode();
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      hash ^= holdings_.GetHashCode();
      hash ^= DsDnlv.GetHashCode();
      if (DeltaTotal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DeltaTotal);
      if (DeltaTotalAcrossDs != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DeltaTotalAcrossDs);
      if (WeightedDnlv != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WeightedDnlv);
      hash ^= MarginalWeightedDnlvByHolding.GetHashCode();
      if (TotalObjective != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalObjective);
      hash ^= MarginalScaledObjectiveByHolding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ts.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ts);
      }
      if (Underlying.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Underlying);
      }
      holdings_.WriteTo(output, _repeated_holdings_codec);
      dsDnlv_.WriteTo(output, _map_dsDnlv_codec);
      if (DeltaTotal != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(DeltaTotal);
      }
      if (DeltaTotalAcrossDs != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(DeltaTotalAcrossDs);
      }
      if (WeightedDnlv != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(WeightedDnlv);
      }
      marginalWeightedDnlvByHolding_.WriteTo(output, _map_marginalWeightedDnlvByHolding_codec);
      if (TotalObjective != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TotalObjective);
      }
      marginalScaledObjectiveByHolding_.WriteTo(output, _map_marginalScaledObjectiveByHolding_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ts.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ts);
      }
      if (Underlying.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Underlying);
      }
      holdings_.WriteTo(ref output, _repeated_holdings_codec);
      dsDnlv_.WriteTo(ref output, _map_dsDnlv_codec);
      if (DeltaTotal != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(DeltaTotal);
      }
      if (DeltaTotalAcrossDs != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(DeltaTotalAcrossDs);
      }
      if (WeightedDnlv != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(WeightedDnlv);
      }
      marginalWeightedDnlvByHolding_.WriteTo(ref output, _map_marginalWeightedDnlvByHolding_codec);
      if (TotalObjective != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TotalObjective);
      }
      marginalScaledObjectiveByHolding_.WriteTo(ref output, _map_marginalScaledObjectiveByHolding_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ts.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ts);
      }
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      size += holdings_.CalculateSize(_repeated_holdings_codec);
      size += dsDnlv_.CalculateSize(_map_dsDnlv_codec);
      if (DeltaTotal != 0D) {
        size += 1 + 8;
      }
      if (DeltaTotalAcrossDs != 0D) {
        size += 1 + 8;
      }
      if (WeightedDnlv != 0D) {
        size += 1 + 8;
      }
      size += marginalWeightedDnlvByHolding_.CalculateSize(_map_marginalWeightedDnlvByHolding_codec);
      if (TotalObjective != 0D) {
        size += 1 + 8;
      }
      size += marginalScaledObjectiveByHolding_.CalculateSize(_map_marginalScaledObjectiveByHolding_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResultStressTestDs other) {
      if (other == null) {
        return;
      }
      if (other.Ts.Length != 0) {
        Ts = other.Ts;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      holdings_.Add(other.holdings_);
      dsDnlv_.MergeFrom(other.dsDnlv_);
      if (other.DeltaTotal != 0D) {
        DeltaTotal = other.DeltaTotal;
      }
      if (other.DeltaTotalAcrossDs != 0D) {
        DeltaTotalAcrossDs = other.DeltaTotalAcrossDs;
      }
      if (other.WeightedDnlv != 0D) {
        WeightedDnlv = other.WeightedDnlv;
      }
      marginalWeightedDnlvByHolding_.MergeFrom(other.marginalWeightedDnlvByHolding_);
      if (other.TotalObjective != 0D) {
        TotalObjective = other.TotalObjective;
      }
      marginalScaledObjectiveByHolding_.MergeFrom(other.marginalScaledObjectiveByHolding_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ts = input.ReadString();
            break;
          }
          case 18: {
            Underlying = input.ReadString();
            break;
          }
          case 26: {
            holdings_.AddEntriesFrom(input, _repeated_holdings_codec);
            break;
          }
          case 34: {
            dsDnlv_.AddEntriesFrom(input, _map_dsDnlv_codec);
            break;
          }
          case 41: {
            DeltaTotal = input.ReadDouble();
            break;
          }
          case 49: {
            DeltaTotalAcrossDs = input.ReadDouble();
            break;
          }
          case 57: {
            WeightedDnlv = input.ReadDouble();
            break;
          }
          case 66: {
            marginalWeightedDnlvByHolding_.AddEntriesFrom(input, _map_marginalWeightedDnlvByHolding_codec);
            break;
          }
          case 73: {
            TotalObjective = input.ReadDouble();
            break;
          }
          case 82: {
            marginalScaledObjectiveByHolding_.AddEntriesFrom(input, _map_marginalScaledObjectiveByHolding_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ts = input.ReadString();
            break;
          }
          case 18: {
            Underlying = input.ReadString();
            break;
          }
          case 26: {
            holdings_.AddEntriesFrom(ref input, _repeated_holdings_codec);
            break;
          }
          case 34: {
            dsDnlv_.AddEntriesFrom(ref input, _map_dsDnlv_codec);
            break;
          }
          case 41: {
            DeltaTotal = input.ReadDouble();
            break;
          }
          case 49: {
            DeltaTotalAcrossDs = input.ReadDouble();
            break;
          }
          case 57: {
            WeightedDnlv = input.ReadDouble();
            break;
          }
          case 66: {
            marginalWeightedDnlvByHolding_.AddEntriesFrom(ref input, _map_marginalWeightedDnlvByHolding_codec);
            break;
          }
          case 73: {
            TotalObjective = input.ReadDouble();
            break;
          }
          case 82: {
            marginalScaledObjectiveByHolding_.AddEntriesFrom(ref input, _map_marginalScaledObjectiveByHolding_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
